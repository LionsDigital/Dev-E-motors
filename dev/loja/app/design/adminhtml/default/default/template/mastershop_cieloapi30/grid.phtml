<?php
	$cols = $this->_columns;
	$first_col = key($cols);
	$html_id_custom = $this->getElement()->getId();
	$html_name = $this->getElement()->getName();
	$values = $this->getArrayRows();
?>

<style>
	.disabled_grid
	{ /*http://stackoverflow.com/a/25328170*/

		pointer-events: none;
		opacity: 0.4;

	}

</style>

<div id="<?php echo $html_id_custom; ?>">
<div class="grid" id="<?php echo $html_id_custom; ?>_grid">

		<table cellspacing="0" id="<?php echo $html_id_custom; ?>_table">
			<?php
				if ($this->getIsRequired())
				{
			?>
				<input type="hidden" class="required-option-<?php echo $html_id_custom; ?>-rows" name="validation_<?php echo $html_id_custom; ?>_result" value="" />
			<?php
				}

				foreach ($cols as &$col)
				{
			?>
				<col<?php if(!empty($col["size"])): ?> width="<?php echo $col['size']; ?>"<?php endif; ?> />
			<?php
				}
			?>
			<col width="1" />
			<thead>
				<tr class="headings">
					<?php

						foreach ($cols as &$col)
						{

					?>
					<th><?php echo $col['label'] ?><?php if ($col['is_required']): ?> <span class="required">*</span><?php endif; ?></th>
					<?php

						}

					?>
					<th class="last"><?php echo Mage::helper('catalog')->__('Action') ?></th>
				</tr>
			</thead>
			<tbody id="<?php echo $html_id_custom ?>_container"></tbody>
			<tfoot>
				<tr>
					<td colspan="<?php echo $this->getAddButtonColspan(); ?>" class="a-right"><?php echo $this->getAddButtonHtml() ?></td>
				</tr>
			</tfoot>
		</table>

		<script type="text/javascript">
		//<![CDATA[
			<?php echo $html_id_custom; ?>RowTemplate = //do not use var keyword, to set it globally

				'<tr>'
				<?php

					$col_ctrl = 0;

					foreach ($cols as $name => &$col)
					{

					//deve conter div com classe css "field-row" para mostrar corretamente os avisos de erro

				?>
			+		'<td<?php if($col_ctrl == 0): ?> class="<?php echo $html_id_custom; ?>-<?php echo $first_col; ?>"<?php endif; ?>>'
			+			'<div class="field-row"<?php if ($col['type'] == 'time'): ?> style="white-space:nowrap"<?php endif; ?>><?php echo $this->getFieldHtml($col, $name); ?></div>'
<?php /*			+			'<div class="validation_advice" id="advice-required-entry-<?php echo $html_name; ?>_row_{{index}}_<?php echo $name; ?>"></div>'*/ ?>
			+		'</td>'
				<?php

						$col_ctrl++;

					}

				?>
			+		'<td class="last">'
			+			'<?php echo $this->getDeleteFieldHtml('delete'); ?>'
			+			'<button title="<?php echo Mage::helper('catalog')->__('Delete'); ?>" type="button" class="scalable delete icon-btn delete-product-option" id="<?php echo $html_id_custom; ?>_row_{{index}}_delete_button" onclick="return <?php echo $html_id_custom; ?>Control.deleteItem(event);">'
			+				'<span><span><span><?php echo Mage::helper('catalog')->__('Delete') ?></span></span></span>'
			+			'</button>'
			+		'</td>'
			+	'</tr>';

			<?php echo $html_id_custom; ?>Control = //do not use var keyword, to set it globally
			{
				template: new Template(<?php echo $html_id_custom; ?>RowTemplate.replace(/replace_js/g, 'script'), new RegExp('(^|.|\\r|\\n)({{\\s*(\\w+)\\s*}})', '')),
				itemsCount: 0,
				addItem : function ()
				{
					var new_index = this.itemsCount++;
					var data =
					{
						<?php
							foreach ($cols as $col_name => &$col)
							{
						?>
						<?php echo $col_name; ?>: '<?php if (isset($col['default'])) echo $col['default']; ?>',
						<?php
							}
						?>
						index: new_index,
						idx: new_index
					};

					if (arguments.length)
					{
						index_tmp = data.index;

						data = arguments[0];
						data.index = index_tmp;
						data.idx = index_tmp;
					}

					var contents = this.template.evaluate(data);
					contents = contents.replace(new RegExp('{idx}', 'g'), data.idx);
					contents = contents.replace(new RegExp('{jsal}', 'g'), "('");
					contents = contents.replace(new RegExp('{jsar}', "g"), "')");
					contents = contents.replace(new RegExp('{apos}', 'g'), "'");

					Element.insert( $('<?php echo $html_id_custom ?>_container'), { bottom: contents } );

					var script_regex = new RegExp('<script\\b[^>]*>([\\s\\S]*?)<\/script>', 'gmi');
					var script_exec;

					while (script_exec = script_regex.exec(contents))
					{
						eval(script_exec[1]);
					}

					<?php
						foreach ($cols as $col_name => &$col)
						{
							$js_row_id = $this->getJsRowId($html_id_custom, $col_name);

							if ($col['type'] == 'time')
							{
					?>

					$('<?php echo $js_row_id; ?>').value = data.<?php echo $col_name; ?>.join(',');
					$('<?php echo $js_row_id; ?>').next('select', 0).setValue(data.<?php echo $col_name; ?>[0]);
					$('<?php echo $js_row_id; ?>').next('select', 1).setValue(data.<?php echo $col_name; ?>[1]);
					$('<?php echo $js_row_id; ?>').next('select', 2).setValue(data.<?php echo $col_name; ?>[2]);

					<?php
							}
							else
							{
					?>

					$('<?php echo $js_row_id; ?>').value = data.<?php echo $col_name; ?>;

						<?php
							}

							if (isset($col['add_toggle']) && $col['add_toggle'])
							{
						?>

						if (data.<?php echo $col_name; ?> != '')
						{
							var element_toggle = $('<?php echo $js_row_id; ?>_toggle');
							element_toggle.checked = true;
							toggle_conditional(element_toggle, element_toggle.parentNode.parentNode.select('#<?php echo $js_row_id; ?>'));
						}

					<?php
							}
						}
					?>

					//jscolor update

					$$('.color').each(
						function (el)
						{
							if (jscolor)
							{
								new jscolor.color( el, {hash: true} );
								el.removeClassName('color'); //don't process again on new line
							}
						}
					);

					$('<?php echo $html_id_custom ?>_container').select('input', 'select').each(function(el){ Event.observe(el, 'change', el.setHasChanges.bind(el)); });
				},

				deleteItem: function (event)
				{
					var tr = Event.findElement(event, 'tr');

					if (tr)
					{
						var elem_flag = [];

						Element.select(tr, '.delete').each(function(elem){ elem.value='1'; elem_flag.push(elem); });
						Element.select(tr, ['input', 'select', 'button']).each(function(elem)
						{
							var delete_elem = true;

							for	(i = 0; i < elem_flag.length; i++)
							{
								if (elem_flag[i] == elem)
								{
									delete_elem = false;
									break;
								}
							}

							if (delete_elem)
							{
								elem.remove();
							}
						});
						tr.hide();
					}

					return false;
				}
			};

			<?php
				if (is_array($values) && !empty($values))
				{
					foreach ($values as $row)
					{
						$row_data = Mage::helper('core')->jsonEncode( $row->getData() );

			?>
				<?php echo $html_id_custom; ?>Control.addItem(<?php echo $row_data; ?>);
			<?php
					}
				}
			?>

		function toggle_conditional (p_checkbox, p_element)
		{
			p_element.each(
				function (element)
				{
					element.disabled = (p_checkbox.checked ? '' : 'disabled');

					if (p_checkbox.checked)
					{
						element.removeClassName('disabled');
					}
					else
					{
						element.addClassName('disabled');
					}

					$$('img#' + element.id + '_trig').each(
						function (element_calendar)
						{
							if (p_checkbox.checked)
							{
								element_calendar.show();
							}
							else
							{
								element_calendar.hide();
							}
						}
					);
				}
			);
		}

		<?php
			if ($this->getIsRequired())
			{
		?>

		Validation.addAllThese([
			['required-option-<?php echo $html_id_custom; ?>-rows', <?php echo $this->helper('core')->jsonEncode(Mage::helper('catalog')->__('Please add rows to option.')); ?>, function(v, elm)
			{
				var optionContainerElm = elm.up('div.grid');
				var gridTypesFlag = false;
				gridTypeElements = $$('#' + optionContainerElm.id + ' .<?php echo $html_id_custom; ?>-<?php echo $first_col; ?>');
				gridTypeElements.each(function(elm)
				{

					if (elm.up('tr').visible())
					{
						gridTypesFlag = true;
					}
				});
				elm.advaiceContainer = optionContainerElm.id + '_advice';
				return gridTypesFlag;
			}]]);

		<?php
			}
		?>

		//]]>
		</script>

		<?php echo $this->getChildHtml('additional_javascript'); ?>

	<?php
		if ($this->canDisplayUseDefault())
		{
	?>

	<tr>
		<td class="label">&nbsp;</td>
		<td colspan="10" class="scope-label use-default">
			<?php echo $this->getScopeLabel(); ?>

			<input <?php if ($this->getElement()->getReadonly()): ?> disabled="disabled"<?php endif; ?> type="checkbox" name="use_default[]" id="<?php echo $html_id_custom; ?>_default"<?php if ($this->usedDefault()): ?> checked="checked"<?php endif; ?> onclick="disable_grid_scope(this, '<?php echo $html_id_custom; ?>_table')" value="<?php echo $html_id_custom; ?>"/>
			<label for="<?php echo $html_id_custom; ?>_default" class="normal"><?php echo $this->__('Use Default Value') ?></label>

			<?php if ($this->usedDefault()): ?>

				<script>

					disable_grid_scope($('<?php echo $html_id_custom; ?>_default'), '<?php echo $html_id_custom; ?>_table');

				</script>

			<?php endif; ?>

		</td>
	</tr>

<?php
		}
?>

</div>
</div>
<div class="validation_advice" id="<?php echo $html_id_custom; ?>_grid_advice"></div>

